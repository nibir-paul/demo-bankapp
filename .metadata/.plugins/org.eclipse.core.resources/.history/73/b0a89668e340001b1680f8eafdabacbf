package com.bankapplication.test.maven;

import static org.junit.Assert.*;

import java.io.PrintStream;

import org.junit.After;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import static org.mockito.Matchers.startsWith;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

import com.bankapplication.exceptions.maven.WrongAmountException;
import com.bankapplication.maven.BankAccount;

public class BankAccountTest {
	
	BankAccount acc;
	
	@Rule
	public ExpectedException exception = ExpectedException.none();
	
	@Before
	public void setUptestDepositUpdatesBalance(){
		acc = new BankAccount(100);  
	} 
	
	@After
	public void tearDown(){
		acc = null;
	}
	
	@Test
	public void testDepositUpdatesBalance() throws WrongAmountException{
		acc.deposit(100);
		assertEquals(acc.getBalance(), 200); 
	}
	
	@Test
	public void testDepositeNotUpdateBalance() throws WrongAmountException {
		acc.deposit(-100);
		assertEquals(acc.getBalance(), 100);
	}
	
	@Test
	public void testAmountGreaterThan20K() throws WrongAmountException {
		exception.expect(WrongAmountException.class);
		exception.expectMessage("Amount greater than 20000 can't be deposited.");
		
		acc.deposit(21000);
	}
	
	@Test
	public void testWithdrawUpdatesBalance(){
    	acc.withdraw(30);
    	assertEquals(acc.getBalance(), 70);
    }
	
	@Test
    public void testWithdrawForAmountGreaterThanBalance() {
        PrintStream out = mock(PrintStream.class);
        out.println("Hey!!");
        
        System.setOut(out);
        acc.withdraw(300);
        out.flush();
        verify(out).println("balance");
    }
}
